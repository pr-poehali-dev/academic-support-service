import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { Progress } from '@/components/ui/progress';
import Icon from '@/components/ui/icon';

export default function Index() {
  const [workType, setWorkType] = useState('');
  const [complexity, setComplexity] = useState('');
  const [deadline, setDeadline] = useState('');
  const [calculatedPrice, setCalculatedPrice] = useState(0);
  const [chatOpen, setChatOpen] = useState(false);
  const [selectedExpert, setSelectedExpert] = useState('');
  const [message, setMessage] = useState('');
  const [name, setName] = useState('');
  const [consultantOpen, setConsultantOpen] = useState(false);
  const [cabinetOpen, setCabinetOpen] = useState(false);
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [loginForm, setLoginForm] = useState({ email: '', password: '' });
  const [user, setUser] = useState({ name: '–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤', email: 'alexey@example.com', phone: '+7 (999) 123-45-67' });

  const calculatePrice = () => {
    let basePrice = 0;
    const complexityMultiplier = complexity === 'simple' ? 1 : complexity === 'medium' ? 1.5 : 2.5;
    const deadlineMultiplier = deadline === 'urgent' ? 2 : deadline === 'week' ? 1.3 : 1;
    
    switch (workType) {
      case 'coursework': basePrice = 3000; break;
      case 'diploma': basePrice = 15000; break;
      case 'control': basePrice = 1500; break;
      case 'referat': basePrice = 800; break;
      case 'website': basePrice = 25000; break;
      case 'presentation': basePrice = 2000; break;
    }
    
    const total = basePrice * complexityMultiplier * deadlineMultiplier;
    setCalculatedPrice(total);
  };

  React.useEffect(() => {
    if (workType && complexity && deadline) {
      calculatePrice();
    }
  }, [workType, complexity, deadline]);

  const teamMembers = [
    {
      name: '–ê—Ä—Ç—ë–º',
      role: '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞',
      specialty: 'IT –∏ –æ–±–ª–∞—á–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
      description: '–£—á–∞—Å—Ç–Ω–∏–∫ —Å–±–æ—Ä–Ω–æ–π –†–æ—Å—Å–∏–∏ –ø–æ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ ¬´–û–±–ª–∞—á–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏¬ª (WorldSkills Russia), –ø—Ä–∏–∑—ë—Ä –∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª—å –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —ç—Ç–∞–ø–æ–≤.',
      expertise: ['IT-–ø—Ä–æ–µ–∫—Ç—ã', '–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞', 'AWS', 'DevOps', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞'],
      avatar: 'üë®‚Äçüíª',
      online: true,
      responseTime: '5 –º–∏–Ω'
    },
    {
      name: '–í—è—á–µ—Å–ª–∞–≤',
      role: '–ò–Ω–∂–µ–Ω–µ—Ä-–∞–Ω–∞–ª–∏—Ç–∏–∫',
      specialty: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã',
      description: '–û–ø—ã—Ç –≤ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏, —Ä–∞—Å—á—ë—Ç–∞—Ö, —Ç–µ—Ö–Ω–∏–∫–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–º –∞–Ω–∞–ª–∏–∑–µ. –†–∞–±–æ—Ç–∞–µ—Ç —Å AutoCAD, Excel, Revit, –ö–û–ú–ü–ê–°-3D.',
      expertise: ['–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —á–µ—Ä—Ç–µ–∂–∏', '–°–æ–ø—Ä–æ–º–∞—Ç', '–¢–µ–ø–ª–æ—Ç–µ—Ö–Ω–∏–∫–∞', '–≠–∫–æ–Ω–æ–º–∏–∫–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è', '–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω—ã'],
      avatar: 'üë®‚Äçüîß',
      online: true,
      responseTime: '10 –º–∏–Ω'
    },
    {
      name: '–õ—è–Ω–∞',
      role: '–≠–∫—Å–ø–µ—Ä—Ç –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã—Ö –Ω–∞—É–∫',
      specialty: '–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞—É–∫–∏',
      description: '–§–æ–∫—É—Å –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–∞—É—á–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é —Å—Ç—Ä–æ–≥–æ—Å—Ç—å –∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å.',
      expertise: ['–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è', '–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞', '–°–æ—Ü–∏–æ–ª–æ–≥–∏—è', '–§–∏–ª–æ—Å–æ—Ñ–∏—è', '–õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞', '–ü—Ä–∞–≤–æ'],
      avatar: 'üë©‚Äçüéì',
      online: false,
      responseTime: '30 –º–∏–Ω'
    },
    {
      name: '–ï–ª–µ–Ω–∞',
      role: '–ú–µ—Ç–æ–¥–æ–ª–æ–≥ –∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä',
      specialty: '–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—É—á–Ω—ã—Ö —Ä–∞–±–æ—Ç',
      description: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞—É—á–Ω—ã—Ö —Ä–∞–±–æ—Ç, –ø—Ä–æ–≤–µ—Ä–∫–µ –ª–æ–≥–∏–∫–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—é –º–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.',
      expertise: ['–†–µ–¥–∞–∫—Ç—É—Ä–∞', '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ –ì–û–°–¢', '–ê–Ω—Ç–∏–ø–ª–∞–≥–∏–∞—Ç', '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏', '–†–µ—Ü–µ–Ω–∑–∏–∏'],
      avatar: 'üë©‚Äçüíº',
      online: true,
      responseTime: '15 –º–∏–Ω'
    },
    {
      name: '–í–∏–∫–∞',
      role: 'Frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
      specialty: 'UX –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
      description: '–°–æ–∑–¥–∞—ë—Ç —É–¥–æ–±–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å–∞–π—Ç—ã, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–µ–∫—Ç–æ–≤.',
      expertise: ['–î–∏–∑–∞–π–Ω –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π', '–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã', '–ò–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞', 'UX-–¥–∏–∑–∞–π–Ω', 'IT-–ø—Ä–æ–µ–∫—Ç—ã'],
      avatar: 'üë©‚Äçüé®',
      online: true,
      responseTime: '3 –º–∏–Ω'
    }
  ];

  const orders = [
    {
      id: '#2024-001',
      title: '–ö—É—Ä—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ —ç–∫–æ–Ω–æ–º–∏–∫–µ',
      status: 'completed',
      progress: 100,
      expert: '–í—è—á–µ—Å–ª–∞–≤',
      deadline: '2024-01-15',
      price: 4500,
      files: ['kursovaya_ekonomika.docx', 'prezentaciya.pptx']
    },
    {
      id: '#2024-002',
      title: '–î–∏–ø–ª–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ IT',
      status: 'in_progress',
      progress: 75,
      expert: '–ê—Ä—Ç—ë–º',
      deadline: '2024-02-28',
      price: 25000,
      files: ['chapter1.docx', 'chapter2.docx']
    },
    {
      id: '#2024-003',
      title: '–†–µ—Ñ–µ—Ä–∞—Ç –ø–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏',
      status: 'pending',
      progress: 0,
      expert: '–õ—è–Ω–∞',
      deadline: '2024-01-20',
      price: 1200,
      files: []
    }
  ];

  const documents = [
    { name: 'kursovaya_ekonomika.docx', type: 'docx', size: '2.4 MB', date: '2024-01-15', orderId: '#2024-001' },
    { name: 'prezentaciya.pptx', type: 'pptx', size: '8.1 MB', date: '2024-01-15', orderId: '#2024-001' },
    { name: 'chapter1.docx', type: 'docx', size: '1.8 MB', date: '2024-01-10', orderId: '#2024-002' },
    { name: 'chapter2.docx', type: 'docx', size: '2.1 MB', date: '2024-01-12', orderId: '#2024-002' },
    { name: 'metodichka.pdf', type: 'pdf', size: '15.6 MB', date: '2024-01-08', orderId: null }
  ];

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'completed': return 'bg-green-500';
      case 'in_progress': return 'bg-blue-500';
      case 'pending': return 'bg-yellow-500';
      default: return 'bg-gray-500';
    }
  };

  const getStatusText = (status: string) => {
    switch (status) {
      case 'completed': return '–ó–∞–≤–µ—Ä—à—ë–Ω';
      case 'in_progress': return '–í —Ä–∞–±–æ—Ç–µ';
      case 'pending': return '–û–∂–∏–¥–∞–µ—Ç';
      default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  };

  const handleLogin = () => {
    if (loginForm.email && loginForm.password) {
      setIsLoggedIn(true);
    }
  };

  const services = [
    { title: '–ö—É—Ä—Å–æ–≤—ã–µ –∏ –¥–∏–ø–ª–æ–º–Ω—ã–µ —Ä–∞–±–æ—Ç—ã', icon: 'GraduationCap', description: '–ü–æ –ª—é–±–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º –ì–û–°–¢' },
    { title: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á—ë—Ç—ã', icon: 'Calculator', description: '–ß–µ—Ä—Ç–µ–∂–∏, –ø—Ä–æ–µ–∫—Ç—ã, –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è' },
    { title: 'IT-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞', icon: 'Code', description: '–°–∞–π—Ç—ã, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –æ–±–ª–∞—á–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞' },
    { title: '–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω—ã', icon: 'TrendingUp', description: '–û—Ç—á—ë—Ç—ã –ø–æ –ø—Ä–∞–∫—Ç–∏–∫–µ, —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞' },
    { title: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞—â–∏—Ç–µ', icon: 'Presentation', description: '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏, –¥–æ–∫–ª–∞–¥—ã, –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã' },
    { title: '–†–µ–¥–∞–∫—Ç—É—Ä–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ç—É—Ä–∞', icon: 'FileText', description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–Ω—Ç–∏–ø–ª–∞–≥–∏–∞—Ç, –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ –ì–û–°–¢' }
  ];

  const principles = [
    { title: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥', icon: 'User', description: '–†–∞–±–æ—Ç–∞ –ø–∏—à–µ—Ç—Å—è —Å –Ω—É–ª—è –ø–æ–¥ –≤–∞—à–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è' },
    { title: '–ì–∞—Ä–∞–Ω—Ç–∏—è —Å—Ä–æ–∫–∞', icon: 'Clock', description: '–î–∞–∂–µ —Å—Ä–æ—á–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –æ—Ç 24 —á–∞—Å–æ–≤' },
    { title: '–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ', icon: 'Award', description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏, —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏' },
    { title: '–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å', icon: 'Shield', description: '–ù–∏ –æ–¥–∏–Ω –∑–∞–∫–∞–∑ –Ω–µ —Ä–∞–∑–≥–ª–∞—à–∞–µ—Ç—Å—è' }
  ];

  const faqItems = [
    {
      question: '–ö–∞–∫–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ?',
      answer: '–ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—Ç, –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å, —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ì–û–°–¢ –∏ –º–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π. –ö–∞–∂–¥—ã–π –ø—Ä–æ–µ–∫—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞—É–¥–∏—Ç –º–∏–Ω–∏–º—É–º –¥–≤—É–º—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏.'
    },
    {
      question: '–ö–∞–∫ –±—ã—Å—Ç—Ä–æ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Å—Ä–æ—á–Ω—ã–µ –∑–∞–∫–∞–∑—ã?',
      answer: '–°—Ä–æ—á–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –≤—ã–ø–æ–ª–Ω—è–µ–º –æ—Ç 24 —á–∞—Å–æ–≤. –¢–æ—á–Ω—ã–µ —Å—Ä–æ–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –æ–±—ä—ë–º–∞ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã. –í—Å–µ–≥–¥–∞ —Å–æ–±–ª—é–¥–∞–µ–º –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω—ã–µ —Å—Ä–æ–∫–∏.'
    },
    {
      question: '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –ª–∏ –≤—ã –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–æ –∑–∞—â–∏—Ç—ã?',
      answer: '–î–∞, –º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ–º –ø–æ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º –∏ –¥–æ—Ä–∞–±–æ—Ç–∫–∞–º –¥–æ —É—Å–ø–µ—à–Ω–æ–π –∑–∞—â–∏—Ç—ã. –≠—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥–∏.'
    },
    {
      question: '–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –≤—ã —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è–º–∏?',
      answer: '–î–∞, –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≤–∫–ª—é—á–∞–µ—Ç –∏–Ω–∂–µ–Ω–µ—Ä–∞-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –≤ AutoCAD, Excel, Revit, –ö–û–ú–ü–ê–°-3D. –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á—ë—Ç—ã, —á–µ—Ä—Ç–µ–∂–∏, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã.'
    }
  ];

  return (
    <div className="min-h-screen bg-white font-source">
      {/* Header */}
      <header className="border-b bg-white/80 backdrop-blur-md sticky top-0 z-50">
        <div className="max-w-6xl mx-auto px-4 py-4 flex items-center justify-between">
          <div className="flex items-center space-x-2">
            <Icon name="GraduationCap" className="text-primary" size={32} />
            <span className="font-inter font-bold text-xl text-secondary">–ö–æ–º–∞–Ω–¥–∞ –ê—Ä—Ç—ë–º–∞</span>
          </div>
          <nav className="hidden md:flex space-x-6">
            <a href="#services" className="text-secondary hover:text-primary transition-colors">–£—Å–ª—É–≥–∏</a>
            <a href="#team" className="text-secondary hover:text-primary transition-colors">–ö–æ–º–∞–Ω–¥–∞</a>
            <a href="#calculator" className="text-secondary hover:text-primary transition-colors">–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</a>
            <a href="#contact" className="text-secondary hover:text-primary transition-colors">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
          </nav>
          <div className="flex items-center space-x-3">
            <Dialog open={cabinetOpen} onOpenChange={setCabinetOpen}>
              <DialogTrigger asChild>
                <Button variant="outline" className="border-primary text-primary hover:bg-primary hover:text-white">
                  <Icon name="User" className="mr-2" size={16} />
                  –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
                </Button>
              </DialogTrigger>
              <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
                <DialogHeader>
                  <DialogTitle className="font-inter text-2xl">
                    {isLoggedIn ? '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç' : '–í—Ö–æ–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç'}
                  </DialogTitle>
                </DialogHeader>
                
                {!isLoggedIn ? (
                  <div className="space-y-4 max-w-md mx-auto">
                    <div>
                      <label className="block text-sm font-medium mb-2">Email</label>
                      <Input 
                        type="email"
                        placeholder="your@email.com"
                        value={loginForm.email}
                        onChange={(e) => setLoginForm({...loginForm, email: e.target.value})}
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium mb-2">–ü–∞—Ä–æ–ª—å</label>
                      <Input 
                        type="password"
                        placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                        value={loginForm.password}
                        onChange={(e) => setLoginForm({...loginForm, password: e.target.value})}
                      />
                    </div>
                    <Button 
                      className="w-full bg-primary hover:bg-primary/90 text-white"
                      onClick={handleLogin}
                      disabled={!loginForm.email || !loginForm.password}
                    >
                      –í–æ–π—Ç–∏
                    </Button>
                    <p className="text-sm text-muted-foreground text-center">
                      –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <span className="text-primary cursor-pointer hover:underline">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</span>
                    </p>
                  </div>
                ) : (
                  <Tabs defaultValue="orders" className="w-full">
                    <TabsList className="grid w-full grid-cols-4">
                      <TabsTrigger value="orders">–ó–∞–∫–∞–∑—ã</TabsTrigger>
                      <TabsTrigger value="documents">–î–æ–∫—É–º–µ–Ω—Ç—ã</TabsTrigger>
                      <TabsTrigger value="profile">–ü—Ä–æ—Ñ–∏–ª—å</TabsTrigger>
                      <TabsTrigger value="settings">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</TabsTrigger>
                    </TabsList>
                    
                    <TabsContent value="orders" className="space-y-4">
                      <div className="flex items-center justify-between">
                        <h3 className="font-inter font-semibold text-lg">–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤</h3>
                        <Badge variant="secondary">{orders.length} –∑–∞–∫–∞–∑–æ–≤</Badge>
                      </div>
                      
                      <div className="grid gap-4">
                        {orders.map((order) => (
                          <Card key={order.id} className="hover:shadow-md transition-shadow">
                            <CardContent className="p-6">
                              <div className="flex items-start justify-between mb-4">
                                <div>
                                  <div className="flex items-center space-x-2 mb-1">
                                    <h4 className="font-medium">{order.title}</h4>
                                    <Badge className={`${getStatusColor(order.status)} text-white text-xs`}>
                                      {getStatusText(order.status)}
                                    </Badge>
                                  </div>
                                  <p className="text-sm text-muted-foreground">ID: {order.id}</p>
                                  <p className="text-sm text-muted-foreground">–≠–∫—Å–ø–µ—Ä—Ç: {order.expert}</p>
                                </div>
                                <div className="text-right">
                                  <p className="font-semibold text-lg text-primary">{order.price.toLocaleString()} ‚ÇΩ</p>
                                  <p className="text-sm text-muted-foreground">–¥–æ {order.deadline}</p>
                                </div>
                              </div>
                              
                              {order.status === 'in_progress' && (
                                <div className="mb-4">
                                  <div className="flex justify-between text-sm mb-1">
                                    <span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                                    <span>{order.progress}%</span>
                                  </div>
                                  <Progress value={order.progress} className="h-2" />
                                </div>
                              )}
                              
                              <div className="flex items-center justify-between">
                                <div className="flex items-center space-x-2">
                                  <Icon name="FileText" size={16} className="text-muted-foreground" />
                                  <span className="text-sm text-muted-foreground">
                                    {order.files.length} —Ñ–∞–π–ª–æ–≤
                                  </span>
                                </div>
                                <div className="flex space-x-2">
                                  <Button size="sm" variant="outline">
                                    <Icon name="MessageCircle" className="mr-2" size={14} />
                                    –ß–∞—Ç
                                  </Button>
                                  <Button size="sm" variant="outline">
                                    <Icon name="Download" className="mr-2" size={14} />
                                    –°–∫–∞—á–∞—Ç—å
                                  </Button>
                                </div>
                              </div>
                            </CardContent>
                          </Card>
                        ))}
                      </div>
                    </TabsContent>
                    
                    <TabsContent value="documents" className="space-y-4">
                      <div className="flex items-center justify-between">
                        <h3 className="font-inter font-semibold text-lg">–ú–æ–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã</h3>
                        <Badge variant="secondary">{documents.length} —Ñ–∞–π–ª–æ–≤</Badge>
                      </div>
                      
                      <Table>
                        <TableHeader>
                          <TableRow>
                            <TableHead>–ù–∞–∑–≤–∞–Ω–∏–µ</TableHead>
                            <TableHead>–†–∞–∑–º–µ—Ä</TableHead>
                            <TableHead>–î–∞—Ç–∞</TableHead>
                            <TableHead>–ó–∞–∫–∞–∑</TableHead>
                            <TableHead>–î–µ–π—Å—Ç–≤–∏—è</TableHead>
                          </TableRow>
                        </TableHeader>
                        <TableBody>
                          {documents.map((doc, index) => (
                            <TableRow key={index}>
                              <TableCell className="flex items-center space-x-2">
                                <Icon name="FileText" size={16} className="text-muted-foreground" />
                                <span>{doc.name}</span>
                              </TableCell>
                              <TableCell className="text-muted-foreground">{doc.size}</TableCell>
                              <TableCell className="text-muted-foreground">{doc.date}</TableCell>
                              <TableCell>
                                {doc.orderId ? (
                                  <Badge variant="outline">{doc.orderId}</Badge>
                                ) : (
                                  <span className="text-muted-foreground">‚Äî</span>
                                )}
                              </TableCell>
                              <TableCell>
                                <div className="flex space-x-1">
                                  <Button size="sm" variant="ghost">
                                    <Icon name="Download" size={14} />
                                  </Button>
                                  <Button size="sm" variant="ghost">
                                    <Icon name="Share" size={14} />
                                  </Button>
                                </div>
                              </TableCell>
                            </TableRow>
                          ))}
                        </TableBody>
                      </Table>
                    </TabsContent>
                    
                    <TabsContent value="profile" className="space-y-4">
                      <h3 className="font-inter font-semibold text-lg">–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h3>
                      <div className="grid md:grid-cols-2 gap-6">
                        <Card>
                          <CardHeader>
                            <CardTitle className="text-lg">–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</CardTitle>
                          </CardHeader>
                          <CardContent className="space-y-4">
                            <div>
                              <label className="block text-sm font-medium mb-2">–ò–º—è</label>
                              <Input value={user.name} readOnly />
                            </div>
                            <div>
                              <label className="block text-sm font-medium mb-2">Email</label>
                              <Input value={user.email} readOnly />
                            </div>
                            <div>
                              <label className="block text-sm font-medium mb-2">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                              <Input value={user.phone} readOnly />
                            </div>
                            <Button variant="outline" className="w-full">
                              <Icon name="Edit" className="mr-2" size={16} />
                              –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                            </Button>
                          </CardContent>
                        </Card>
                        
                        <Card>
                          <CardHeader>
                            <CardTitle className="text-lg">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</CardTitle>
                          </CardHeader>
                          <CardContent>
                            <div className="space-y-4">
                              <div className="flex justify-between">
                                <span>–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</span>
                                <Badge variant="secondary">{orders.length}</Badge>
                              </div>
                              <div className="flex justify-between">
                                <span>–ó–∞–≤–µ—Ä—à–µ–Ω–æ</span>
                                <Badge className="bg-green-500 text-white">
                                  {orders.filter(o => o.status === 'completed').length}
                                </Badge>
                              </div>
                              <div className="flex justify-between">
                                <span>–í —Ä–∞–±–æ—Ç–µ</span>
                                <Badge className="bg-blue-500 text-white">
                                  {orders.filter(o => o.status === 'in_progress').length}
                                </Badge>
                              </div>
                              <div className="flex justify-between">
                                <span>–ü–æ—Ç—Ä–∞—á–µ–Ω–æ</span>
                                <span className="font-semibold text-primary">
                                  {orders.reduce((sum, o) => sum + o.price, 0).toLocaleString()} ‚ÇΩ
                                </span>
                              </div>
                            </div>
                          </CardContent>
                        </Card>
                      </div>
                    </TabsContent>
                    
                    <TabsContent value="settings" className="space-y-4">
                      <h3 className="font-inter font-semibold text-lg">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
                      <Card>
                        <CardHeader>
                          <CardTitle className="text-lg">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</CardTitle>
                        </CardHeader>
                        <CardContent className="space-y-4">
                          <div className="flex items-center justify-between">
                            <span>Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
                            <input type="checkbox" defaultChecked className="toggle" />
                          </div>
                          <div className="flex items-center justify-between">
                            <span>SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
                            <input type="checkbox" className="toggle" />
                          </div>
                          <div className="flex items-center justify-between">
                            <span>Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
                            <input type="checkbox" defaultChecked className="toggle" />
                          </div>
                        </CardContent>
                      </Card>
                      
                      <div className="flex justify-between pt-4">
                        <Button variant="outline" onClick={() => setIsLoggedIn(false)}>
                          <Icon name="LogOut" className="mr-2" size={16} />
                          –í—ã–π—Ç–∏
                        </Button>
                        <Button variant="destructive">
                          <Icon name="Trash" className="mr-2" size={16} />
                          –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
                        </Button>
                      </div>
                    </TabsContent>
                  </Tabs>
                )}
              </DialogContent>
            </Dialog>
            
            <Button className="bg-primary hover:bg-primary/90 text-white">
              <Icon name="MessageCircle" className="mr-2" size={16} />
              Telegram
            </Button>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="py-20 bg-gradient-to-br from-accent via-white to-accent/50">
        <div className="max-w-6xl mx-auto px-4 text-center animate-fade-in">
          <Badge className="mb-4 bg-primary/10 text-primary border-primary/20">–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</Badge>
          <h1 className="font-inter font-bold text-4xl md:text-5xl text-secondary mb-6 leading-tight">
            –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è<br />
            <span className="text-primary">–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</span><br />
            –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
          </h1>
          <p className="text-lg text-muted-foreground max-w-2xl mx-auto mb-8 leading-relaxed">
            –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ. –°–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ. –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ.<br />
            –ö–æ–º–∞–Ω–¥–∞ –∏–∑ –ø—è—Ç–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π—Ç–∏ –≤—Å–µ —ç—Ç–∞–ø—ã –æ–±—É—á–µ–Ω–∏—è: 
            –æ—Ç –∫—É—Ä—Å–æ–≤–æ–π —Ä–∞–±–æ—Ç—ã –¥–æ –∑–∞—â–∏—Ç—ã –¥–∏–ø–ª–æ–º–∞.
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button size="lg" className="bg-primary hover:bg-primary/90 text-white">
              <Icon name="MessageCircle" className="mr-2" size={20} />
              –ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram
            </Button>
            <Button size="lg" variant="outline" className="border-primary text-primary hover:bg-primary hover:text-white">
              <Icon name="Calculator" className="mr-2" size={20} />
              –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å
            </Button>
          </div>
        </div>
      </section>

      {/* Services */}
      <section id="services" className="py-16 bg-white">
        <div className="max-w-6xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="font-inter font-bold text-3xl text-secondary mb-4">–ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º</h2>
            <p className="text-muted-foreground max-w-2xl mx-auto">–ü–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏—Ö –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —É—Å–ª—É–≥</p>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {services.map((service, index) => (
              <Card key={index} className="hover:shadow-lg transition-shadow duration-300 border-accent animate-scale-in" 
                    style={{ animationDelay: `${index * 0.1}s` }}>
                <CardHeader className="text-center">
                  <Icon name={service.icon as any} className="mx-auto text-primary mb-3" size={48} />
                  <CardTitle className="font-inter text-lg">{service.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-muted-foreground text-sm">{service.description}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Team */}
      <section id="team" className="py-16 bg-accent/30">
        <div className="max-w-6xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="font-inter font-bold text-3xl text-secondary mb-4">–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞</h2>
            <p className="text-muted-foreground max-w-2xl mx-auto">–ü—è—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ —Å –≥–ª—É–±–æ–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç–Ω–æ–π —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–æ–π</p>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {teamMembers.map((member, index) => (
              <Card key={index} className="hover:shadow-lg transition-all duration-300 bg-white border-accent animate-fade-in"
                    style={{ animationDelay: `${index * 0.15}s` }}>
                <CardHeader className="text-center">
                  <div className="text-4xl mb-3">{member.avatar}</div>
                  <CardTitle className="font-inter text-xl">{member.name}</CardTitle>
                  <p className="text-primary font-medium">{member.role}</p>
                  <p className="text-sm text-muted-foreground">{member.specialty}</p>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-muted-foreground mb-4">{member.description}</p>
                  <div className="flex flex-wrap gap-2 mb-4">
                    {member.expertise.map((skill, skillIndex) => (
                      <Badge key={skillIndex} variant="secondary" className="text-xs">
                        {skill}
                      </Badge>
                    ))}
                  </div>
                  <div className="flex items-center justify-between pt-2 border-t">
                    <div className="flex items-center space-x-2">
                      <div className={`w-2 h-2 rounded-full ${member.online ? 'bg-green-500' : 'bg-gray-400'}`}></div>
                      <span className="text-xs text-muted-foreground">
                        {member.online ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ–ª–∞–π–Ω'}
                      </span>
                    </div>
                    <span className="text-xs text-muted-foreground">~{member.responseTime}</span>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Calculator */}
      <section id="calculator" className="py-16 bg-white">
        <div className="max-w-4xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="font-inter font-bold text-3xl text-secondary mb-4">–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏</h2>
            <p className="text-muted-foreground">–£–∑–Ω–∞–π—Ç–µ –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞</p>
          </div>
          <Card className="animate-scale-in">
            <CardContent className="p-8">
              <div className="grid md:grid-cols-3 gap-6 mb-6">
                <div>
                  <label className="block text-sm font-medium text-secondary mb-2">–¢–∏–ø —Ä–∞–±–æ—Ç—ã</label>
                  <Select value={workType} onValueChange={setWorkType}>
                    <SelectTrigger>
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="coursework">–ö—É—Ä—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞</SelectItem>
                      <SelectItem value="diploma">–î–∏–ø–ª–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞</SelectItem>
                      <SelectItem value="control">–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞</SelectItem>
                      <SelectItem value="referat">–†–µ—Ñ–µ—Ä–∞—Ç</SelectItem>
                      <SelectItem value="website">–í–µ–±-—Å–∞–π—Ç</SelectItem>
                      <SelectItem value="presentation">–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                <div>
                  <label className="block text-sm font-medium text-secondary mb-2">–°–ª–æ–∂–Ω–æ—Å—Ç—å</label>
                  <Select value={complexity} onValueChange={setComplexity}>
                    <SelectTrigger>
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="simple">–ü—Ä–æ—Å—Ç–∞—è</SelectItem>
                      <SelectItem value="medium">–°—Ä–µ–¥–Ω—è—è</SelectItem>
                      <SelectItem value="complex">–í—ã—Å–æ–∫–∞—è</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                <div>
                  <label className="block text-sm font-medium text-secondary mb-2">–°—Ä–æ–∫</label>
                  <Select value={deadline} onValueChange={setDeadline}>
                    <SelectTrigger>
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="month">–ú–µ—Å—è—Ü –∏ –±–æ–ª–µ–µ</SelectItem>
                      <SelectItem value="week">–ù–µ–¥–µ–ª—è</SelectItem>
                      <SelectItem value="urgent">–°—Ä–æ—á–Ω–æ (1-3 –¥–Ω—è)</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
              </div>
              {calculatedPrice > 0 && (
                <div className="text-center p-6 bg-accent/50 rounded-lg animate-fade-in">
                  <div className="text-3xl font-bold text-primary mb-2">
                    {calculatedPrice.toLocaleString('ru-RU')} ‚ÇΩ
                  </div>
                  <p className="text-muted-foreground text-sm mb-4">
                    –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞
                  </p>
                  <Button className="bg-primary hover:bg-primary/90 text-white">
                    <Icon name="MessageCircle" className="mr-2" size={16} />
                    –û–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç
                  </Button>
                </div>
              )}
            </CardContent>
          </Card>
        </div>
      </section>

      {/* Principles */}
      <section className="py-16 bg-accent/30">
        <div className="max-w-6xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="font-inter font-bold text-3xl text-secondary mb-4">–ù–∞—à–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã</h2>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {principles.map((principle, index) => (
              <div key={index} className="text-center animate-fade-in" style={{ animationDelay: `${index * 0.1}s` }}>
                <Icon name={principle.icon as any} className="mx-auto text-primary mb-4" size={48} />
                <h3 className="font-inter font-semibold text-lg text-secondary mb-2">{principle.title}</h3>
                <p className="text-muted-foreground text-sm">{principle.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* FAQ */}
      <section className="py-16 bg-white">
        <div className="max-w-4xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="font-inter font-bold text-3xl text-secondary mb-4">–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
          </div>
          <Accordion type="single" collapsible className="w-full">
            {faqItems.map((item, index) => (
              <AccordionItem key={index} value={`item-${index}`}>
                <AccordionTrigger className="font-inter font-medium text-left">
                  {item.question}
                </AccordionTrigger>
                <AccordionContent className="text-muted-foreground">
                  {item.answer}
                </AccordionContent>
              </AccordionItem>
            ))}
          </Accordion>
        </div>
      </section>

      {/* Contact CTA */}
      <section id="contact" className="py-20 bg-gradient-to-br from-primary to-primary/80 text-white">
        <div className="max-w-4xl mx-auto px-4 text-center animate-fade-in">
          <h2 className="font-inter font-bold text-3xl mb-6">–ì–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è</h2>
          <p className="text-lg mb-8 text-primary-foreground/90">
            –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ Telegram ‚Äî –æ–±—Å—É–¥–∏–º –≤–∞—à –ø—Ä–æ–µ–∫—Ç, —Å—Ä–æ–∫–∏ –∏ –±—é–¥–∂–µ—Ç.<br />
            –ü–µ—Ä–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞.
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button size="lg" variant="secondary" className="bg-white text-primary hover:bg-white/90">
              <Icon name="MessageCircle" className="mr-2" size={20} />
              @GrekExpert
            </Button>
            <Button size="lg" variant="outline" className="border-white text-white hover:bg-white hover:text-primary">
              <Icon name="Phone" className="mr-2" size={20} />
              –ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫
            </Button>
          </div>
        </div>
      </section>

      {/* Online Consultant Widget */}
      <div className="fixed bottom-4 right-4 z-50">
        <Dialog open={consultantOpen} onOpenChange={setConsultantOpen}>
          <DialogTrigger asChild>
            <Button className="bg-primary hover:bg-primary/90 text-white shadow-lg rounded-full w-16 h-16 animate-pulse">
              <Icon name="MessageSquare" size={24} />
            </Button>
          </DialogTrigger>
          <DialogContent className="max-w-md">
            <DialogHeader>
              <DialogTitle className="font-inter text-xl">–û–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç</DialogTitle>
            </DialogHeader>
            <div className="space-y-4">
              <p className="text-muted-foreground">–í—ã–±–µ—Ä–∏—Ç–µ —ç–∫—Å–ø–µ—Ä—Ç–∞ –ø–æ –≤–∞—à–µ–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:</p>
              
              <div className="space-y-3">
                {teamMembers.map((member, index) => (
                  <div key={index} 
                       className={`p-3 border rounded-lg cursor-pointer transition-colors ${
                         selectedExpert === member.name 
                           ? 'border-primary bg-primary/5' 
                           : 'border-gray-200 hover:border-primary/50'
                       }`}
                       onClick={() => setSelectedExpert(member.name)}>
                    <div className="flex items-center justify-between">
                      <div className="flex items-center space-x-3">
                        <span className="text-2xl">{member.avatar}</span>
                        <div>
                          <div className="flex items-center space-x-2">
                            <h4 className="font-medium">{member.name}</h4>
                            <div className={`w-2 h-2 rounded-full ${member.online ? 'bg-green-500' : 'bg-gray-400'}`}></div>
                          </div>
                          <p className="text-sm text-muted-foreground">{member.role}</p>
                        </div>
                      </div>
                      <div className="text-right">
                        <Badge variant={member.online ? 'default' : 'secondary'} className="text-xs">
                          {member.online ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ–ª–∞–π–Ω'}
                        </Badge>
                        <p className="text-xs text-muted-foreground mt-1">~{member.responseTime}</p>
                      </div>
                    </div>
                  </div>
                ))}
              </div>

              {selectedExpert && (
                <div className="space-y-3 border-t pt-4 animate-fade-in">
                  <Input 
                    placeholder="–í–∞—à–µ –∏–º—è" 
                    value={name} 
                    onChange={(e) => setName(e.target.value)}
                  />
                  <Textarea 
                    placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç..." 
                    value={message} 
                    onChange={(e) => setMessage(e.target.value)}
                    rows={3}
                  />
                  <Button 
                    className="w-full bg-primary hover:bg-primary/90 text-white"
                    disabled={!name || !message}
                    onClick={() => {
                      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                      alert(`–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —ç–∫—Å–ø–µ—Ä—Ç—É ${selectedExpert}!`);
                      setConsultantOpen(false);
                      setName('');
                      setMessage('');
                      setSelectedExpert('');
                    }}
                  >
                    <Icon name="Send" className="mr-2" size={16} />
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                  </Button>
                </div>
              )}
            </div>
          </DialogContent>
        </Dialog>
      </div>

      {/* Footer */}
      <footer className="bg-secondary text-white py-12">
        <div className="max-w-6xl mx-auto px-4">
          <div className="grid md:grid-cols-3 gap-8">
            <div>
              <div className="flex items-center space-x-2 mb-4">
                <Icon name="GraduationCap" size={24} />
                <span className="font-inter font-bold text-lg">–ö–æ–º–∞–Ω–¥–∞ –ê—Ä—Ç—ë–º–∞</span>
              </div>
              <p className="text-gray-300 text-sm">
                –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
              </p>
            </div>
            <div>
              <h3 className="font-inter font-semibold mb-4">–£—Å–ª—É–≥–∏</h3>
              <ul className="space-y-2 text-sm text-gray-300">
                <li>–ö—É—Ä—Å–æ–≤—ã–µ –∏ –¥–∏–ø–ª–æ–º–Ω—ã–µ —Ä–∞–±–æ—Ç—ã</li>
                <li>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á—ë—Ç—ã</li>
                <li>IT-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞</li>
                <li>–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω—ã</li>
              </ul>
            </div>
            <div>
              <h3 className="font-inter font-semibold mb-4">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
              <div className="space-y-2 text-sm text-gray-300">
                <div className="flex items-center space-x-2">
                  <Icon name="MessageCircle" size={16} />
                  <span>@GrekExpert</span>
                </div>
                <div className="flex items-center space-x-2">
                  <Icon name="Clock" size={16} />
                  <span>–†–∞–±–æ—Ç–∞–µ–º 24/7</span>
                </div>
              </div>
            </div>
          </div>
          <div className="border-t border-gray-700 mt-8 pt-8 text-center text-sm text-gray-400">
            ¬© 2024 –ö–æ–º–∞–Ω–¥–∞ –ê—Ä—Ç—ë–º–∞. –ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.
          </div>
        </div>
      </footer>
    </div>
  );
}